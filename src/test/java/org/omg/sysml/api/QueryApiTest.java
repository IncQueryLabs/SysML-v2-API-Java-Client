/*
 * SysML v2 API and Services
 * REST/HTTP binding (PSM) for the SysML v2 standard API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.omg.sysml.api;

import org.omg.sysml.ApiException;
import org.omg.sysml.model.Element;
import org.omg.sysml.model.Error;
import org.omg.sysml.model.Query;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QueryApi
 */
@Ignore
public class QueryApiTest {

    private final QueryApi api = new QueryApi();

    
    /**
     * Delete query by project and ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteQueryByProjectAndIdTest() throws ApiException {
        UUID projectId = null;
        UUID queryId = null;
        Query response = api.deleteQueryByProjectAndId(projectId, queryId);

        // TODO: test validations
    }
    
    /**
     * Get queries by project
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueriesByProjectTest() throws ApiException {
        UUID projectId = null;
        String pageAfter = null;
        String pageBefore = null;
        Integer pageSize = null;
        List<Query> response = api.getQueriesByProject(projectId, pageAfter, pageBefore, pageSize);

        // TODO: test validations
    }
    
    /**
     * Get query by project and ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueryByProjectAndIdTest() throws ApiException {
        UUID projectId = null;
        UUID queryId = null;
        Query response = api.getQueryByProjectAndId(projectId, queryId);

        // TODO: test validations
    }
    
    /**
     * Get query results by project and query definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueryResultsByProjectIdQueryTest() throws ApiException {
        UUID projectId = null;
        Query body = null;
        UUID commitId = null;
        List<Element> response = api.getQueryResultsByProjectIdQuery(projectId, body, commitId);

        // TODO: test validations
    }
    
    /**
     * Get query results by project and query
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueryResultsByProjectIdQueryIdTest() throws ApiException {
        UUID projectId = null;
        UUID queryId = null;
        UUID commitId = null;
        List<Element> response = api.getQueryResultsByProjectIdQueryId(projectId, queryId, commitId);

        // TODO: test validations
    }
    
    /**
     * Get query results by project and query definition via POST
     *
     * For compatibility with clients that don&#39;t support GET requests with a body
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueryResultsByProjectIdQueryPostTest() throws ApiException {
        UUID projectId = null;
        Query body = null;
        UUID commitId = null;
        List<Element> response = api.getQueryResultsByProjectIdQueryPost(projectId, body, commitId);

        // TODO: test validations
    }
    
    /**
     * Create query by project
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postQueryByProjectTest() throws ApiException {
        UUID projectId = null;
        Query body = null;
        Query response = api.postQueryByProject(projectId, body);

        // TODO: test validations
    }
    
}
